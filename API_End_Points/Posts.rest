# All Posts
# Will return first posts 20 by default
# Accepts both limit and skip in query  example {?limit=10&skip=5}
GET http://localhost:8080/posts

###
# Single Post
# Will return one Post requested by ID
GET http://localhost:8080/posts/p/1

###
# Search Posts
# Will return first posts 10 by default
# Accepts both limit and skip in query  example {?limit=10&skip=5}
GET http://localhost:8080/posts/search?Search=it

###
# Sort Posts
# Sort by Property must be type of either string or number
# Will sort by the provided property. Also accepts order whether ascending or descending
# By Default sorts in ascending way
# By Default returns first 10
# Accepts both limit and skip in query  example {?limit=10&skip=5}
GET http://localhost:8080/posts/sort?sortby=id&order=desc

###
# Post By User
# Will return Posts by the User requested in UserID
# By default returns first 10
# Accepts both limit and skip in query  example {?limit=10&skip=5}
GET http://localhost:8080/posts/user/112

###
# Add Post
# Must include all of mentioned parameters and parameters must be of same data type 
# Parameters { title : "string", body : "string", views : "number", tags: "array", reactions : { likes : "number",  dislikes: "number" }}
POST http://localhost:8080/posts/add
Content-Type: application/json

{
	"title" : "sdf",
	"body" : "asdf",
	"views" : 211,
	"userId" : 12,
	"tags" : [],
	"reactions" : {
		"likes": 200,
		"dislikes":100
	}
}

###
# Update post
# Must be one of the mentioned parameters. And must have same data type
# Parameters { title : "string", body : "string", views : "number", tags: "array", reactions : { likes : "number",  dislikes: "number" }}
PUT  http://localhost:8080/posts/p/112
Content-Type: application/json

{
	"title" : "Yes The ship rolls and her timbers creak lik",
	"reactions" : {
		"likes":2,
		"dislikes":2
	}
}


###
# Delete Cart
DELETE http://localhost:8080/posts/p/201